@inject IJSRuntime JSRuntime


<!-- Button trigger modal -->
@* <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
    Launch demo modal
</button>
 *@
<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Modal title</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @if (ActionStatus == "تأكيد التعديل" || ActionStatus == "تأكيد الإضافة")
                {
                    <input type="text" @bind-value="@CategoryName" />
                }
                ...
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">غلق</button>
                <button type="button" class="btn btn-primary" @onclick="ExecuteConfirmDelete">@ActionStatus</button>
            </div>
        </div>
    </div>
</div>
@code {
    // public delegate void UpdateCategoryDelegate(string newCategoryName);
    [Parameter]
    public ClinicFront.Pages.User.Admin.AdminHome.CategoryDelegate categoryDelegate { get; set; }
    [Parameter]
    public string ActionStatus { get; set; }
    [Parameter]
    public Action OnConfirmDelete { get; set; }
    public string CategoryName { get; set; }
    private void ExecuteConfirmDelete()
    {
        if (ActionStatus == "تأكيد التعديل" || ActionStatus == "تأكيد الإضافة" )
        {
            categoryDelegate?.Invoke(CategoryName); // Execute the DeleteCategory function
        }
        else
        {
            OnConfirmDelete?.Invoke(); // Execute the DeleteCategory function

        }
        CloseModal();
    }

    private async Task CloseModal()
    {
        await JSRuntime.InvokeVoidAsync("closeModal");
    }
}