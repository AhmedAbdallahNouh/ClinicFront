@page "/alldoctors"
@layout MainLayoutAdmin
@inject IAdminService _adminservice

<div class="backgroundimgOfPage"></div>
<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="flex_row" style="padding: 16px 12px 0px;justify-content:space-between;">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                <h5 class="modal-title" id="exampleModalLabel"><b>تجديد الأشتراك</b></h5>
            </div>
            <div class="modal-body direction_rtl">
                <p>تاريخ بداية الأشتراك: @doctorDtoModal.StartSubscriptionDate</p>
                <p>تاريخ نهاية الأشتراك: @doctorDtoModal.EndSubscriptionDate</p>
            </div>
            <div class="direction_rtl" style="margin:auto;">
                <h4 style="margin-bottom: 1rem;text-align: center;">
                    <b>أدخل تاريخ نهاية الأشتراك</b>
                </h4>
                <input type="date" @bind="NewEndSubscriptionDate"/>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn" style="background-color:rgba(240, 68, 68, 1);color:white" data-bs-dismiss="modal">إغلاق</button>
                <button type="button" class="btn" @onclick="() => ModalSaveChanges()" style="background-color:#03206C;color:white">حفظ التغييرات</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ADS" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="flex_row" style="padding: 16px 12px 0px;justify-content:space-between;">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                <h5 class="modal-title" id="exampleModalLabel"><b>تجديد الأشتراك</b></h5>
            </div>
            <div class="modal-body direction_rtl">
                @if (doctorDtoModal.AdvertisementFlag > 0)
                {
                    <p>رقم ترتيب الدكتور: @doctorDtoModal.AdvertisementFlag</p>
                }
                else
                {
                    <p>رقم ترتيب الدكتور: لا يوجد إعلان له</p>
                }
            </div>
            <div class="modal-body direction_rtl">
                @if (getdoctorsflags.Count != 0)
                {
                    <p>أرقام الأعلانات: 
                        @foreach(var doctorflag in getdoctorsflags)
                        {
                            if(getdoctorsflags[getdoctorsflags.Count - 1] == doctorflag)
                            {
                                <span>@doctorflag</span>
                            }
                            else
                            {
                                <span>@doctorflag ,</span> 
                            }
                        }
                    </p>
                }
                else
                {
                    <p>أرقام الأعلانات: لا يوجد </p>
                }
            </div>
            <div class="direction_rtl" style="margin:auto;margin-bottom: 1rem;">
                <h4 style="margin-bottom: 1rem;text-align: center;">
                    <b>قم بإدخال ترتيب الدكتور</b>
                </h4>
                <input type="number" @bind="AdvertisementFlag" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn" style="background-color:rgba(240, 68, 68, 1);color:white" data-bs-dismiss="modal">إغلاق</button>
                <button type="button" class="btn" @onclick="() => ModalSaveChanges()" style="background-color:#03206C;color:white">حفظ التغييرات</button>
            </div>
        </div>
    </div>
</div>

<div class="main_container">
<h1>كـــل الأطبـــــاء</h1>

    @*    Search and Filter Button*@    
    <input class="form-control search" @bind="Search" @onkeydown="FilterDoctorBySearch" list="datalistOptions" id="exampleDataList" placeholder="إبحث عن طبيب معين ...">

    <div class="row" style="justify-content:space-evenly;width:100%;">
        @foreach(var doctorDTO in doctorDTOs)
        {
            <div class="cardd rounded-3 col-lg-5 col-md-12 col-sm-12">
                <div class="card-body">
                    <div class="row" style="justify-content:flex-end">
                        <div class="col-sm-12 col-md-6 col-lg-8 col-xl-8 flex_column" style="justify-content:flex-start;">
                            <div>
                                <div class="flex">
                                    <h4><b>:الأسم</b></h4>
                                    <h5><b>@doctorDTO.FirstName</b></h5>
                                </div>
                                <div class="flex">
                                    <h4><b>:التخصص</b></h4>
                                    <h5><b>@doctorDTO.categoryDTO.Name</b></h5>
                                </div>
                                <div class="flex">
                                    <h4><b>:تاريخ نهاية الأشتراك</b></h4>
                                    <h5><b>@doctorDTO.EndSubscriptionDate</b></h5>
                                </div>
                            </div>
                            <div class="btn-group dropdown">
                                <button class="bi bi-three-dots-vertical" data-bs-toggle="dropdown" aria-expanded="false"></button>

                                <ul class="dropdown-menu">
                                    <li>
                                        <button class="dropdown-item" @onclick="() => SendDoctorToModal(doctorDTO)" data-bs-toggle="modal" data-bs-target="#exampleModal">
                                            <h5>تجديد الأشتراك</h5>
                                        </button>
                                    </li> 
                                    <li>
                                        <button class="dropdown-item" @onclick="() => SendDoctorToModal(doctorDTO)" data-bs-toggle="modal" data-bs-target="#ADS">
                                            <h5>إعلان</h5>
                                        </button>
                                    </li> 
                                    <li>
                                        <a class="dropdown-item" href="/maindoctorpage/@doctorDTO.Id">
                                            <h5>صفحة الطبيب</h5>
                                        </a>
                                    </li>
                                    <li>
                                        <button class="dropdown-item" @onclick="() => DeleteDoctor(doctorDTO.Id)">
                                            <h5>حذف</h5>
                                        </button>
                                    </li>
                                </ul>
                            </div>
                        </div>

                        <div class="col-sm-12 col-md-4 col-lg-3 col-xl-3 mb-1 mb-lg-0 border-start">
                            <div class="bg-image hover-zoom ripple rounded ripple-surface div_img">
                                @if(!string.IsNullOrEmpty(doctorDTO.Image)){
                                    <img src="@doctorDTO.Image" class="w-100" />
                                }else{
                                    <img src="assets/images/doc.jpeg" class="w-100" />
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
        }
    </div>

</div>




@code {
    public List<DoctorDTO> doctorDTOs { get; set; } = new List<DoctorDTO>();
    public List<int> getdoctorsflags { get; set; } = new List<int>();
    public DoctorDTO doctorDtoModal { get; set; } = new DoctorDTO();
    public DateTime NewEndSubscriptionDate { get; set; } = new DateTime();
    public int AdvertisementFlag { get; set; } = 0;
    public string Search { get; set; } = "";

    protected override async void OnInitialized()
    {
        doctorDTOs = await _adminservice.getallDoctors();
        getdoctorsflags = await _adminservice.getdoctorsflags();
        StateHasChanged();
        base.OnInitialized();
    }

    public async void DeleteDoctor(string id)
    {
        var response = await _adminservice.UpdateDoctor_AsDelete(id);

        if (response.StatusCode.ToString() == "Ok")
        {
            var doctorTodeleteIndex =  doctorDTOs.FindIndex(d => d.Id == id);
            if (doctorTodeleteIndex != -1) doctorDTOs.RemoveAt(doctorTodeleteIndex);
            StateHasChanged();
        }
    }
    public void SendDoctorToModal(DoctorDTO doctorDTO)
    {
        this.doctorDtoModal = doctorDTO;
    }
    public async void ModalSaveChanges()
    {
        doctorDtoModal.EndSubscriptionDate = NewEndSubscriptionDate;
        doctorDtoModal.AdvertisementFlag = AdvertisementFlag;
        var response = await _adminservice.UpdateDoctor(doctorDtoModal);
        if (response.StatusCode.ToString() == "Ok")
        {
            var doctorToUpdateIndex = doctorDTOs.FindIndex(d => d.Id == doctorDtoModal.Id);
            if (doctorToUpdateIndex != -1) doctorDTOs[doctorToUpdateIndex].EndSubscriptionDate = doctorDtoModal.EndSubscriptionDate;
            StateHasChanged();

        }
    }

    public void FilterDoctorBySearch()
    {
        doctorDTOs = doctorDTOs.Where(d => d.FirstName.Contains(Search, StringComparison.OrdinalIgnoreCase)).ToList();
    }
}
