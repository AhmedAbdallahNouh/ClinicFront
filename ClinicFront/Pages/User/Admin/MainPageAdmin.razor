@page "/mainpageadmin"
@layout MainLayoutAdmin
@inject IAdminService iadminservice

<div class="main_container">
    <h1>جميع الأطباء</h1>

    <div class="containerswiper">
        <h1>جميع الأطباء</h1>
        <div class="swiper ">
            <div class="image-box-container swiper-container2">
                <div class="swiper-wrapper">
                    @for (var i = 0; i < 5; i++)
                    {
                        <div class="swiper-slide">
                            <div class="card" style="width: 18rem;">
                                <img src="@doctorDTOs[i].Image" class="card-img-top" alt="...">
                                <div class="card-body">
                                    <h6>@doctorDTOs[i].FirstName</h6>
                                    <h6>@doctorDTOs[i].categoryDTO.Name</h6>
                                </div>
                            </div>
                        </div>
                    }
                    <div class="swiper-slide">
                        <div class="card" style="width: 18rem;">
                            <div class="card-body">
                                <h2>المزيد</h2>
                                <i class="bi bi-plus-lg"></i>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="P" class="swiper-button-next"></div>
                <div class="swiper-button-prev"></div>
                <input type="hidden" id="w" value="some_value" />
            </div>
        </div>
    </div>
   

    <h1>جميع الأدمن</h1>
    <div class="container_admin row">
        @for(var i =0; i< 5; i++)
        {
            <div class="col-lg-4 col-md-6">
                <img class="img_of_admin" src="@adminRegiterationDTOs[i].Image" />
                <h6 style="text-align:center;">@adminRegiterationDTOs[i].FirstName</h6>
            </div>
        }
    </div>
</div>

@code {
    [Inject]
    public IJSRuntime jSRuntime { get; set; }
    public List<AdminRegiterationDTO> adminRegiterationDTOs { get; set; } = new List<AdminRegiterationDTO>();
    public List<DoctorDTO> doctorDTOs { get; set; } = new List<DoctorDTO>();

    private async Task InitializeSwiper()
    {
        await jSRuntime.InvokeVoidAsync("initializeSwiper");
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await InitializeSwiper();
        }

        StateHasChanged();
    }


    protected override async void OnInitialized()
    {
        adminRegiterationDTOs = await iadminservice.getallAdmins();

        StateHasChanged();
        base.OnInitialized();
    }

    public void DeleteAdmin(string id)
    {
        iadminservice.DeleteUser(id);
    }

}
