@page "/profileofdoctor/{id}"
@layout MainLayoutDoctor
@inject IAdminService _adminService
@inject AuthenticationStateProvider AuthenticationStateProvider


<div class="container-lg main-container">
    <div class="containerofimage">
        @if (string.IsNullOrEmpty(doctorDTO.CoverImage))
        {
            <div class="CPhoto">
                <img src="@CoverPhoto" class="img" />
            </div>
        }
        else
        {
            <div class="CPhoto">
                <img src="@doctorDTO.CoverImage" class="img" />
            </div>
        }
        <label type="submit" class="btn btn-lg btn-block fw-bold button coverphoto_button">
            <InputFile id="ProfileName" type="file" @onclick="() => Handelcover_img('c')" OnChange="@HandleFileSelected" class="input_i" style="display:none;" multiple />
            <i class="fas fa-camera profileicon" style="font-size:1rem"><b style="margin-right:1rem">صورة الغلاف</b></i>
        </label>

        <div class="profileimage">
            @if(!string.IsNullOrEmpty(doctorDTO.Image)){
                <img src="@doctorDTO.Image" class="img" style="border-radius: 50%;" />
            }
            else
            {
                <i class="bi bi-person-circle" style="color: #ff838a;"></i>
            }
            <label class="profilechange">
                <InputFile id="ProfileName" type="file" @onclick="() => Handelcover_img('i')" OnChange="@HandleFileSelected" class="input_i" style="display:none;" multiple />
                <i class="fas fa-camera profileicon" style="font-size:1rem;"></i>
            </label>
        </div>
    </div>

    <div class="containerofcntent">
        <div class="subcontainerofcntent">
        <h2><b>قم بإدخال هذه البيانات</b></h2>
            <EditForm Model="@doctorDTO" class="form-signup">
                <DataAnnotationsValidator />
                    <h3><b>يجب إدخال هذه البيانات: </b></h3>
                <div class="nessacrydata flexrow row">
                    <div class="col-lg-6 col-md-12">
                           <div class="mb-2 input-container">
                            <InputText id="fname"
                                       @bind-Value="doctorDTO.FirstName"
                                       @onblur=@(()=>HandleInput(doctorDTO.FirstName,"Fname"))
                                       name="Fname"
                                       style="padding-right:3rem;"
                                       class="form-control input_i" />
                            <label class="p @Fname" for="fname"><b>الأسم الأول</b></label>
                            <i class="fas fa-user icon"></i>
                        </div>
                        <ValidationMessage For="@(() => doctorDTO.LastName)" style="text-align:center" />

                        <div class="mb-2 input-container">
                            <InputText id="lname"
                                       @bind-Value="@doctorDTO.LastName"
                                       @onblur=@(()=>HandleInput(doctorDTO.LastName,"Lname"))
                                       name="Lname"
                                       style="padding-right:3rem;"
                                       class="form-control input_i"/>
                            <label class="p @Lname" for="lname"><b>الأسم الأخير</b></label>
                            <i class="fas fa-user icon"></i>
                        </div>
                        <ValidationMessage For="@(() => doctorDTO.LastName)" style="text-align:center" />

                        <div class="mb-2 input-container">
                            <InputText id="Phone"
                                       @bind-Value="@doctorDTO.PhoneNumber"
                                       @onblur=@(()=>HandleInput(doctorDTO.PhoneNumber,"phonenumber"))
                                       name="Phone"
                                       style="padding-right:3rem;"
                                       class="form-control input_i"/>
                            <label class="p @PhoneNumber" for="Phone"><b>رقم الهاتف</b></label>
                            <i class="fas fa-phone-alt icon"></i>
                        </div>
                        <ValidationMessage For="@(() => doctorDTO.PhoneNumber)" style="text-align:center" />
                    </div>



                    <div class="col-lg-6 col-md-12">
                        <div class="mb-2 input-container">
                            <InputNumber id="age"
                                         @bind-Value="@doctorDTO.Age"
                                         @onblur=@(()=>HandleInput(doctorDTO.Age.ToString(),"age"))
                                         name="Age"
                                         style="padding-right:3rem;"
                                         class="form-control input_i"/>
                            <label class="p @Age" for="age"><b>العمـر</b></label>
                                <i class="fa-solid fa-calendar-days icon"></i>
                        </div>
                        <ValidationMessage For="@(() => doctorDTO.Age)" style="text-align:center" />

                        <div class="input-container mb-2">
                            <InputText id="address"
                                       @bind-Value="@doctorDTO.Address"
                                       @onblur=@(()=>HandleInput(doctorDTO.Address,"adderss"))
                                       style="padding-right:3rem;"
                                       class="form-control input_i"/>
                            <label class="p @adderss" for="address"><b>عنوان العيادة</b></label>
                            <i class="fa-solid fa-location-dot icon"></i>
                        </div>
                        <ValidationMessage For="@(() => doctorDTO.Address)" style="text-align:center" />

                        <div class="mb-2 input-container">
                            <InputTextArea id="discription"
                                       @bind-Value="@doctorDTO.Discription"
                                       @onblur=@(()=>HandleInput(doctorDTO.Discription,"discription"))
                                       style="padding-right:3rem;min-height:10rem;"
                                       class="form-control input_i"/>
                            <label class="p @Discription" for="discription"><b>الوصف</b></label>
                            <i class="fa-solid fa-pen-to-square icon"></i>
                        </div>
                        <ValidationMessage For="@(() => doctorDTO.Discription)" style="text-align:center" />
                    </div>
                </div>
                
                <h3><b>هذه البيانات إختياريه:</b></h3>
                <div class="flexrow row">
                    <div class="col-lg-6 col-md-12">
                        <div class="mb-2 input-container">

                            <InputText id="facebook"
                                       @bind-Value="@doctorDTO.FaceBook"
                                       @onblur=@(()=>HandleInput(doctorDTO.FaceBook,"facebook"))
                                       name="Fname"
                                       style="padding-right:3rem;"
                                       class="form-control input_i ss" />
                            <label class="p @Facebook" for="facebook"><b>حساب Facebook</b></label>
                            <i class="bi bi-facebook icon"></i>
                        </div>
                        <ValidationMessage For="@(() => doctorDTO.FaceBook)" style="text-align:center" />

                        <div class="mb-2 input-container">
                            <InputText id="gmail"
                                       @bind-Value="@doctorDTO.Email"
                                       @onblur=@(()=>HandleInput(doctorDTO.Email,"gmail"))
                                       name="Fname"
                                       style="padding-right:3rem;"
                                       class="form-control input_i ss" />
                            <label class="p @Gmail" for="gmail"><b>حساب Gmail</b></label>
                            <i class="bi bi-envelope-at icon"></i>
                        </div>
                        <ValidationMessage For="@(() => doctorDTO.Email)" style="text-align:center" />
                    </div>       
                    
                    
                    <div class="col-lg-6 col-md-12">
                        <div class="mb-2 input-container">
                            <InputText id="instagram"
                                       @bind-Value="@doctorDTO.Instgram"
                                       @onblur=@(()=>HandleInput(doctorDTO.Instgram,"instagram"))
                                       name="Fname"
                                       style="padding-right:3rem;"
                                       class="form-control input_i ss" />
                            <label class="p @Instagram" for="instagram"><b>حساب Instagram</b></label>
                            <i class="bi bi-instagram icon"></i>
                        </div>
                        <ValidationMessage For="@(() => doctorDTO.Instgram)" style="text-align:center" />

                        <div class="mb-2 input-container">
                            <InputText id="whatsapp"
                                       @bind-Value="@doctorDTO.WhatsUpNumber"
                                       @onblur=@(()=>HandleInput(doctorDTO.WhatsUpNumber,"whatsapp"))
                                       name="Fname"
                                       style="padding-right:3rem;"
                                       class="form-control input_i ss" />
                            <label class="p @Whatsapp" for="whatsapp"><b>رقم Whatsapp</b></label>
                            <i class="bi bi-whatsapp icon"></i>
                        </div>
                        <ValidationMessage For="@(() => doctorDTO.WhatsUpNumber)" style="text-align:center" />
                    </div>
                </div>
                

                <button type="submit" class="btn btn-lg btn-block fw-bold button" style="padding: .2rem 0rem;" @onclick="UpdateDoctor">
                    حفــظ
                </button>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [Inject]
    public IJSRuntime navjs { get; set; }
    [Inject]
    public IAdminService adminService { get; set; }
    [Inject]
    public IServicesService servicesService { get; set; }
    public DoctorDTO doctorDTO { get; set; } = new DoctorDTO();
    private AuthenticationState authenticationState;
    [Parameter]
    public string id { get; set; }
    public string Fname { get; set; }
    public string Lname { get; set; }
    public string PhoneNumber { get; set; }
    public string Age { get; set; }
    public string adderss { get; set; }
    public string Discription { get; set; }
    public string Facebook { get; set; }
    public string Gmail { get; set; }
    public string Instagram { get; set; }
    public string Whatsapp { get; set; }
    public string CoverPhoto { get; set; } = "assets/images/halfdoctor.jpeg";
    public string image { get; set; } = "";
    public char handelcover_img { get; set; }
    public bool check { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        // authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        // var doctorId = (authenticationState.User.Claims.ToList())[0].Value;
        doctorDTO = await _adminService.getDoctorbyid(id);
        if (!string.IsNullOrEmpty(doctorDTO.FirstName)) Fname = "p_focus";

        if (!string.IsNullOrEmpty(doctorDTO.LastName)) Lname = "p_focus";
       
        if (!string.IsNullOrEmpty(doctorDTO.PhoneNumber)) PhoneNumber = "p_focus";
       
        if (!string.IsNullOrEmpty(doctorDTO.Age.ToString())) Age = "p_focus";
        
        if (!string.IsNullOrEmpty(doctorDTO.Address)) adderss = "p_focus";
      
        if (!string.IsNullOrEmpty(doctorDTO.Discription)) Discription = "p_focus";
       
        if (!string.IsNullOrEmpty(doctorDTO.FaceBook)) Facebook = "p_focus";
     
        if (!string.IsNullOrEmpty(doctorDTO.Email)) Gmail = "p_focus";
       
        if (!string.IsNullOrEmpty(doctorDTO.WhatsUpNumber)) Whatsapp = "p_focus";
        
        if (!string.IsNullOrEmpty(doctorDTO.Instgram)) Instagram = "p_focus";
     
        StateHasChanged();
        base.OnInitialized();
    }
    public async void UpdateDoctor()
    {
        await adminService.UpdateDoctor(doctorDTO);
    }
    private void HandleInput(string value = null,string propname = null,DoctorDTO doctorDTO = null)
    {
        
        switch (propname)
        {
            case "Fname":
                if (string.IsNullOrEmpty(value))
                {

                    Fname = "p";
                }
                else
                {
                    Fname = "p_focus";
                }
                break;
            case "Lname":
                if (string.IsNullOrEmpty(value))
                {

                    Lname = "p";
                }
                else
                {
                    Lname = "p_focus";
                }
                break;
            case "phonenumber":
                if (string.IsNullOrEmpty(value))
                {

                    PhoneNumber = "p";
                }
                else
                {
                    PhoneNumber = "p_focus";
                }
                break;
            case "age":
                if (string.IsNullOrEmpty(value))
                {

                    Age = "p";
                }
                else
                {
                    Age = "p_focus";
                }
                break;
            case "adderss":
                if (string.IsNullOrEmpty(value))
                {

                    adderss = "p";
                }
                else
                {
                    adderss = "p_focus";
                }
                break;
            case "discription":
                if (string.IsNullOrEmpty(value))
                {

                    Discription = "p";
                }
                else
                {
                    Discription = "p_focus";
                }
                break;
            case "facebook":
                if (string.IsNullOrEmpty(value))
                {

                    Facebook = "p";
                }
                else
                {
                    Facebook = "p_focus";
                }
                break;
            case "gmail":
                if (string.IsNullOrEmpty(value))
                {

                    Gmail = "p";
                }
                else
                {
                    Gmail = "p_focus";
                }
                break;
            case "instagram":
                if (string.IsNullOrEmpty(value))
                {

                    Instagram = "p";
                }
                else
                {
                    Instagram = "p_focus";
                }
                break;
            case "whatsapp":
                if (string.IsNullOrEmpty(value))
                {

                    Whatsapp = "p";
                }
                else
                {
                    Whatsapp = "p_focus";
                }
                break;
        }
    }
    private void Handelcover_img(char img)
    {
        handelcover_img = img;
    }
    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            var format = "image/png";
            var resizedImageFile = await file.RequestImageFileAsync(format, 400, 400);

            using var ms = new MemoryStream();
            await resizedImageFile.OpenReadStream().CopyToAsync(ms);
            var buffer = ms.ToArray();

            var imageDataUrl = $"data:{format};base64,{Convert.ToBase64String(buffer)}";
            if (handelcover_img == 'c')
            {
                CoverPhoto = imageDataUrl;
            }
            else
            {
                image = imageDataUrl;
            }
            check = true;
        }
    }
}
