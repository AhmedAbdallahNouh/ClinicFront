@using System.Text.Json;
@using System.Collections.Specialized;
@using System.Web;
@inject IJSRuntime jsruntime
<PageTitle>Index</PageTitle>

<div class="MapParent" @onclick="AddLocationOnClick">
    <div id="map" style="width: 100%; height: 400px;"></div>
    <button @onclick="GetUserLocation"><i class="fas fa-street-view"></i></button>
</div>
<div class="buttons">
    <button onclick="moveMapLeft()"><i class="fas fa-arrow-left"></i></button>
    <button onclick="moveMapRight()"><i class="fas fa-arrow-right"></i></button>
    <button onclick="moveMapUp()"><i class="fas fa-arrow-up"></i></button>
    <button onclick="moveMapDown()"><i class="fas fa-arrow-down"></i></button>
</div>




@code {
    private bool GetUserLocationSuccess = false;
    private double UserLatitude = 29.19517841315592;
    private double UserLongitude = 30.014648437500004;
    private double AddLatitude = 0.0;
    private double AddLongitude = 0.0;
    private string GetUserLocationError = null;
    public string? name;
    public string? description;
    public List<MapModel>? mapData;
    private string? path;
    [Inject]
    public IAdminService adminService { get; set; }
    protected override async Task OnInitializedAsync()
    {
        await adminService.getDoctorbyid("0c4684b5-df22-4a43-8e2f-2d18dd8a941a");
    }

    protected override void OnAfterRender(bool firstRender)
    {
        InitializeMap();
    }
    public static (double, double) setLocation(string url)
    {
        Uri uri = new Uri(url);
        NameValueCollection queryParams = HttpUtility.ParseQueryString(uri.Query);

        string latString = queryParams["lat"];
        string lonString = queryParams["lon"];

        if (!string.IsNullOrEmpty(latString) && !string.IsNullOrEmpty(lonString))
        {
            if (double.TryParse(latString, out double lat) && double.TryParse(lonString, out double lon))
            {
                return (lat, lon);
            }
        }

        throw new ArgumentException("Latitude or longitude not found in the URL");
    }
    private async Task AddLocationOnClick()
    {
        try
        {
            var location = await jsruntime.InvokeAsync<JsonElement>("addLocationOnClick");

            if (location.TryGetProperty("lat", out var latProperty) && latProperty.ValueKind == JsonValueKind.Number &&
                location.TryGetProperty("lon", out var lonProperty) && lonProperty.ValueKind == JsonValueKind.Number)
            {
                var lat = latProperty.GetDouble();
                var lon = lonProperty.GetDouble();

                AddLatitude = lat;
                AddLongitude = lon;
            }
            else
            {
                Console.WriteLine("Invalid location data: missing or incorrect property types");
            }
        }
        catch (TaskCanceledException ex)
        {
            Console.WriteLine("Task was canceled: " + ex.Message);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error retrieving location data: {ex.Message}");
        }
    }
    private async Task GetUserLocation()
    {
        // GetUserLocationSuccess = false;
        GetUserLocationError = null;

        try
        {
            var location = await jsruntime.InvokeAsync<object>("getCurrentLocation");
            var lat = ((JsonElement)location).GetProperty("lat").GetDouble();
            var lon = ((JsonElement)location).GetProperty("lon").GetDouble();

            UserLatitude = lat;
            UserLongitude = lon;

            // GetUserLocationSuccess = true;
            //FilterMarkers();
        }
        catch (Exception ex)
        {
            GetUserLocationError = ex.Message;
        }
    }
    public List<MapModel> GetData()
    {
        mapData = new List<MapModel>();

        mapData.Add(new MapModel
            {
                Name = "Alibaug",
                Latitude = UserLatitude,
                Longitude = UserLongitude,
                Description = "Alibaug is a coastal town and a municipal council in Raigad District in the Konkan region of Maharashtra, India."
            }

        );
        mapData.Add(new MapModel
            {
                Name = "Alibaug",
                Latitude = AddLatitude,
                Longitude = AddLongitude,
                Description = "Alibaug is a coastal town and a municipal council in Raigad District in the Konkan region of Maharashtra, India."
            }

        );

        return mapData;
    }
    private string enteredUrl;

    protected void NameChanged(string name)
    {
        InitializeMap();
        this.name = name;
        FilterMarkers();
    }

    protected void DescriptionChanged(string description)
    {
        InitializeMap();
        this.description = description;
        FilterMarkers();
    }

    private void InitializeMap()
    {
        GetData();
        jsruntime.InvokeVoidAsync("initializeMap", mapData);
    }

    private void FilterMarkers()
    {
        InitializeMap();
        if (!string.IsNullOrEmpty(this.name))
        {
            mapData = mapData.Where(x => x.Name == this.name).ToList();
        }
        if (!string.IsNullOrEmpty(this.description))
        {
            mapData = mapData.Where(x => x.Description.Contains(this.description)).ToList();
        }

        jsruntime.InvokeVoidAsync("filterMarkers", this.name, this.description, mapData);
    }

    public class MapModel
    {
        public string? Name { get; set; }
        public double Latitude { get; set; }
        public double Longitude { get; set; }
        public string? Description { get; set; }
    }
}